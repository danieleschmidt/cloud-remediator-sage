# Trivy Security Scanner Ignore File
# Advanced configuration for security scanning exclusions

# ===================================================================
# LOW SEVERITY FINDINGS (Acceptable Risk)
# ===================================================================

# Node.js base image vulnerabilities that are mitigated by our runtime environment
CVE-2023-44487  # HTTP/2 Rapid Reset - mitigated by AWS Lambda runtime limits
CVE-2023-39325  # Similar to above, mitigated by runtime constraints

# Development dependencies that don't affect production runtime
**/node_modules/@jest/**
**/node_modules/eslint*/**
**/node_modules/prettier*/**
**/node_modules/@commitlint/**
**/node_modules/husky/**

# ===================================================================
# FALSE POSITIVES (Verified Safe)
# ===================================================================

# Configuration files that may contain sensitive-looking patterns but are safe
**/.eslintrc.js
**/jest.config.js
**/prettier.config.js
**/*.md

# Build and deployment artifacts that are safe
**/.serverless/**
**/dist/**
**/build/**
**/coverage/**

# ===================================================================
# ACCEPTED RISKS (Business Decision)
# ===================================================================

# Legacy AWS SDK v2 - transitioning to v3 in next major version
# Risk: Known security improvements in v3
# Mitigation: Using IAM policies with least privilege, temporary credentials
**/node_modules/aws-sdk/lib/**

# ===================================================================
# TEMPORARY EXCLUSIONS (Review Required)
# ===================================================================

# NOTE: These should be reviewed monthly and removed when possible

# Prototype pollution in lodash - reviewing alternatives
# Target removal date: 2024-Q1
# CVE-2019-10744

# Path traversal in tar - evaluating safer alternatives
# Target removal date: 2024-Q1
# CVE-2021-37701
# CVE-2021-37712

# ===================================================================
# PLATFORM-SPECIFIC EXCLUSIONS
# ===================================================================

# Container scanning exclusions for multi-stage build artifacts
**/scan-target/**

# Lambda-specific exclusions (runtime managed by AWS)
/var/runtime/**
/opt/**

# ===================================================================
# DOCUMENTATION AND EXAMPLES
# ===================================================================

# Documentation examples that may contain dummy credentials
**/docs/examples/**
**/docs/tutorials/**
**/*.example.*
**/.env.example

# Test fixtures with dummy data
**/tests/fixtures/**
**/tests/mocks/**

# ===================================================================
# MONITORING AND OBSERVABILITY
# ===================================================================

# Prometheus metrics endpoint patterns
# These often trigger false positives for exposed metrics
**/metrics/**
**/prometheus/**

# ===================================================================
# COMPLIANCE FRAMEWORK EXCLUSIONS
# ===================================================================

# SLSA build provenance files (expected to contain build info)
**/slsa-provenance.json
**/attestation.json

# SBOM files (expected to contain dependency information)
**/sbom.json
**/cyclonedx.json

# ===================================================================
# VENDOR DEPENDENCIES
# ===================================================================

# Third-party security tools that we trust
**/node_modules/@cyclonedx/**
**/node_modules/@opentelemetry/**
**/node_modules/@pact-foundation/**

# AWS SDK components (managed by AWS security team)
**/node_modules/@aws-sdk/**

# ===================================================================
# FILE TYPE EXCLUSIONS
# ===================================================================

# License and legal files
LICENSE*
NOTICE*
ATTRIBUTION*

# Version control and CI files that don't affect runtime
.gitignore
.gitattributes
.github/**

# Configuration files that are environment-specific
*.config.js
*.rc.json
*.yaml
*.yml

# ===================================================================
# CUSTOM SECURITY EXCEPTIONS
# ===================================================================

# Autonomous backlog system files (internal tooling)
# Risk: Low, internal scripts with limited scope
**/src/backlog/**
**/scripts/**

# Neptune graph database queries (reviewed by security team)
# Risk: Low, parameterized queries with input validation
**/gremlin/**
**/graph/**

# ===================================================================
# EXPIRY TRACKING
# ===================================================================

# NOTE: This file should be reviewed quarterly
# Last review: 2024-01-15
# Next review: 2024-04-15
# Review owner: Security Team

# TODO: Implement automated expiry checking for temporary exclusions
# TODO: Add metrics tracking for ignored vulnerabilities
# TODO: Create monthly security review process