# Cloud Remediator Sage - Environment Configuration Template
# Copy this file to .env and update values for your environment

# ===================================================================
# AWS CONFIGURATION
# ===================================================================

# AWS Region for resource deployment
# Default: us-east-1
AWS_REGION=us-east-1
AWS_DEFAULT_REGION=us-east-1

# AWS Profile for CLI operations (optional)
# Uncomment if using named profiles instead of default credentials
# AWS_PROFILE=your-profile-name

# AWS Account ID for cross-account operations
# Required for some IAM policy configurations
AWS_ACCOUNT_ID=123456789012

# ===================================================================
# NEPTUNE DATABASE CONFIGURATION
# ===================================================================

# Neptune cluster endpoint
# Format: cluster-name.cluster-xxxxxxxxx.region.neptune.amazonaws.com
NEPTUNE_ENDPOINT=your-neptune-cluster.cluster-xxxxxxxxx.us-east-1.neptune.amazonaws.com

# Neptune port (default: 8182)
NEPTUNE_PORT=8182

# Enable Neptune IAM authentication (recommended: true)
NEPTUNE_IAM_AUTH=true

# ===================================================================
# S3 CONFIGURATION
# ===================================================================

# S3 bucket for security scan results
SECURITY_FINDINGS_BUCKET=your-security-findings-bucket

# S3 bucket for remediation templates and artifacts
REMEDIATION_ARTIFACTS_BUCKET=your-remediation-artifacts-bucket

# S3 bucket for system backups
BACKUP_BUCKET=your-backup-bucket

# ===================================================================
# LAMBDA CONFIGURATION
# ===================================================================

# Lambda function memory allocation (MB)
# Default: 512MB, Range: 128-10240
LAMBDA_MEMORY_SIZE=512

# Lambda function timeout (seconds)
# Default: 300s, Max: 900s for Lambda functions
LAMBDA_TIMEOUT=300

# Lambda runtime version
LAMBDA_RUNTIME=nodejs18.x

# ===================================================================
# SECURITY SCANNING CONFIGURATION
# ===================================================================

# Prowler scanning frequency (cron expression)
# Default: Every 6 hours
PROWLER_SCHEDULE=0 */6 * * *

# Maximum number of concurrent scan processes
PROWLER_MAX_CONCURRENT=5

# Prowler scan timeout (minutes)
PROWLER_TIMEOUT=60

# Enable CloudSploit integration (future feature)
CLOUDSPLOIT_ENABLED=false

# Enable Steampipe integration (future feature)
STEAMPIPE_ENABLED=false

# ===================================================================
# RISK SCORING CONFIGURATION
# ===================================================================

# CVSS scoring weights (0.0-1.0)
CVSS_BASE_WEIGHT=0.4
CVSS_TEMPORAL_WEIGHT=0.3
CVSS_ENVIRONMENTAL_WEIGHT=0.3

# Asset criticality scoring factors
ASSET_CRITICALITY_PRODUCTION=1.0
ASSET_CRITICALITY_STAGING=0.7
ASSET_CRITICALITY_DEVELOPMENT=0.3

# WSJF prioritization weights
WSJF_BUSINESS_VALUE_WEIGHT=0.3
WSJF_TIME_CRITICALITY_WEIGHT=0.3
WSJF_RISK_REDUCTION_WEIGHT=0.4

# ===================================================================
# REMEDIATION CONFIGURATION
# ===================================================================

# Enable automatic remediation (true/false)
# Set to false to require manual approval for all remediations
AUTO_REMEDIATION_ENABLED=true

# Remediation execution timeout (minutes)
REMEDIATION_TIMEOUT=30

# Maximum retry attempts for failed remediations
REMEDIATION_MAX_RETRIES=3

# Remediation execution environment
# Options: production, staging, development
REMEDIATION_ENVIRONMENT=staging

# ===================================================================
# GITHUB INTEGRATION
# ===================================================================

# GitHub repository for IaC templates
GITHUB_REPOSITORY=your-org/cloud-infrastructure

# GitHub branch for remediation pull requests
GITHUB_TARGET_BRANCH=main

# GitHub Personal Access Token with repo permissions
# Generate at: https://github.com/settings/tokens
GITHUB_TOKEN=ghp_your_personal_access_token_here

# GitHub webhook secret for repository events
GITHUB_WEBHOOK_SECRET=your-webhook-secret

# ===================================================================
# NOTIFICATION CONFIGURATION
# ===================================================================

# Slack webhook URL for notifications
# Create webhook at: https://api.slack.com/apps
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX

# Slack channel for notifications (without #)
SLACK_CHANNEL=security-alerts

# Email notifications configuration
EMAIL_ENABLED=false
EMAIL_SMTP_HOST=smtp.example.com
EMAIL_SMTP_PORT=587
EMAIL_USERNAME=alerts@example.com
EMAIL_PASSWORD=your-email-password

# ===================================================================
# MONITORING & OBSERVABILITY
# ===================================================================

# Log level for application logging
# Options: error, warn, info, debug, trace
LOG_LEVEL=info

# Enable structured JSON logging
JSON_LOGGING=true

# CloudWatch log group name
CLOUDWATCH_LOG_GROUP=/aws/lambda/cloud-remediator-sage

# CloudWatch metrics namespace
CLOUDWATCH_METRICS_NAMESPACE=CloudRemediatorSage

# Enable X-Ray tracing
XRAY_TRACING_ENABLED=true

# ===================================================================
# PERFORMANCE CONFIGURATION
# ===================================================================

# Maximum concurrent Lambda executions
MAX_CONCURRENT_EXECUTIONS=100

# Lambda reserved concurrency per function
INGESTION_RESERVED_CONCURRENCY=20
SCORING_RESERVED_CONCURRENCY=30
REMEDIATION_RESERVED_CONCURRENCY=10

# Neptune connection pool settings
NEPTUNE_CONNECTION_POOL_MIN=5
NEPTUNE_CONNECTION_POOL_MAX=20

# ===================================================================
# SECURITY CONFIGURATION
# ===================================================================

# KMS key ID for encryption
# Leave empty to use default AWS managed keys
KMS_KEY_ID=arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012

# Enable encryption in transit
ENCRYPTION_IN_TRANSIT=true

# API rate limiting (requests per minute)
API_RATE_LIMIT=1000

# Session timeout (minutes)
SESSION_TIMEOUT=60

# ===================================================================
# DEVELOPMENT CONFIGURATION
# ===================================================================

# Node.js environment
NODE_ENV=development

# Enable debug mode
DEBUG=true

# Enable hot reloading for development
HOT_RELOAD=true

# Local development port
DEV_PORT=3000

# Mock external services for testing
MOCK_AWS_SERVICES=false
MOCK_GITHUB_API=false

# ===================================================================
# TESTING CONFIGURATION
# ===================================================================

# Test environment settings
TEST_TIMEOUT=30000
TEST_COVERAGE_THRESHOLD=90

# Test database configuration
TEST_NEPTUNE_ENDPOINT=localhost:8182
TEST_S3_BUCKET=test-bucket

# Enable integration tests (requires AWS credentials)
ENABLE_INTEGRATION_TESTS=false

# ===================================================================
# COMPLIANCE & AUDIT CONFIGURATION
# ===================================================================

# Audit log retention period (days)
AUDIT_LOG_RETENTION=2555  # 7 years

# Compliance framework
# Options: SOC2, PCI, HIPAA, GDPR
COMPLIANCE_FRAMEWORK=SOC2

# Data residency region
DATA_RESIDENCY_REGION=us-east-1

# ===================================================================
# OPERATIONAL CONFIGURATION
# ===================================================================

# Backup frequency (cron expression)
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# Health check endpoint timeout (seconds)
HEALTH_CHECK_TIMEOUT=10

# Graceful shutdown timeout (seconds)
SHUTDOWN_TIMEOUT=30

# ===================================================================
# FEATURE FLAGS
# ===================================================================

# Enable experimental features
FEATURE_MULTI_CLOUD=false
FEATURE_ML_PREDICTION=false
FEATURE_CUSTOM_WORKFLOWS=false
FEATURE_ADVANCED_ANALYTICS=false

# ===================================================================
# NOTES
# ===================================================================

# 1. Never commit .env files to version control
# 2. Use AWS Parameter Store or Secrets Manager for production secrets
# 3. Rotate credentials regularly according to security policies
# 4. Validate environment variables on application startup
# 5. Use different configurations for dev/staging/production environments

# ===================================================================
# REQUIRED VARIABLES
# ===================================================================

# The following variables are REQUIRED and must be set:
# - AWS_REGION
# - AWS_ACCOUNT_ID
# - NEPTUNE_ENDPOINT
# - SECURITY_FINDINGS_BUCKET
# - GITHUB_TOKEN (if GitHub integration enabled)
# - SLACK_WEBHOOK_URL (if Slack notifications enabled)

# ===================================================================
# SECURITY WARNING
# ===================================================================

# This file contains example configurations and should not be used
# in production without proper security review and secret management.
# Use AWS Parameter Store, Secrets Manager, or other secure secret
# management solutions for production deployments.