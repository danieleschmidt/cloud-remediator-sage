# Cloud Remediator Sage - Pre-commit Hooks Configuration
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # ===================================================================
  # GENERAL CODE QUALITY
  # ===================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File formatting and cleanup
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

      # File content validation
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-case-conflict
      - id: check-symlinks
      - id: destroyed-symlinks

      # Git-specific checks
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=1024]  # 1MB limit
      - id: forbid-new-submodules

      # Security checks
      - id: detect-private-key
      - id: detect-aws-credentials

  # ===================================================================
  # SECRETS DETECTION
  # ===================================================================
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: 
          - --baseline
          - .secrets.baseline
          - --exclude-files
          - '.*\.lock$'
          - --exclude-files
          - '.*package-lock\.json$'
          - --exclude-files
          - '.*\.min\.js$'
        additional_dependencies: ['gibberish-detector']

  # ===================================================================
  # JAVASCRIPT/NODE.JS QUALITY
  # ===================================================================
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.57.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        types: [file]
        additional_dependencies:
          - eslint@8.57.0
          - eslint-plugin-security@1.7.1
          - eslint-plugin-node@11.1.0
          - eslint-plugin-jest@27.6.3

  # Prettier code formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|json|yml|yaml|md|html|css|scss)$
        exclude: |
          (?x)^(
            package-lock\.json|
            .*\.min\.js|
            .*\.min\.css|
            coverage/.*|
            \.serverless/.*|
            dist/.*|
            build/.*
          )$

  # ===================================================================
  # SECURITY SCANNING
  # ===================================================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        files: \.py$
        exclude: tests/.*\.py$
        args: [--skip, B101]

  # Semgrep security analysis
  - repo: https://github.com/returntocorp/semgrep
    rev: v1.45.0
    hooks:
      - id: semgrep
        args:
          - --config=p/security-audit
          - --config=p/secrets
          - --config=p/nodejs
          - --exclude=node_modules
          - --exclude=coverage
          - --exclude=.serverless
          - --exclude=dist
          - --exclude=build
          - --error
          - --no-rewrite-rule-ids
        files: \.(js|jsx|ts|tsx|py|yml|yaml|json)$

  # ===================================================================
  # DOCKERFILE SECURITY
  # ===================================================================
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: Dockerfile.*
        args:
          - --ignore=DL3008  # Pin versions in apt get install
          - --ignore=DL3009  # Delete the apt-get lists after installing
          - --ignore=DL3015  # Avoid additional packages by specifying --no-install-recommends

  # ===================================================================
  # INFRASTRUCTURE AS CODE
  # ===================================================================
  # Terraform validation and security
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.86.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_docs
      - id: terraform_tflint
        args:
          - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl
      - id: terraform_checkov
        args:
          - --args=--framework terraform
          - --args=--check CKV_AWS_*

  # ===================================================================
  # YAML VALIDATION
  # ===================================================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [--format, parsable, --strict]
        exclude: |
          (?x)^(
            \.github/.*\.yml|
            \.github/.*\.yaml|
            node_modules/.*|
            coverage/.*
          )$

  # ===================================================================
  # MARKDOWN QUALITY
  # ===================================================================
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--fix]
        exclude: |
          (?x)^(
            node_modules/.*|
            coverage/.*|
            CHANGELOG\.md
          )$

  # ===================================================================
  # SHELL SCRIPT VALIDATION
  # ===================================================================
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  # ===================================================================
  # DEPENDENCY SECURITY
  # ===================================================================
  # Node.js vulnerability scanning
  - repo: local
    hooks:
      - id: npm-audit
        name: npm audit security check
        entry: npm audit --audit-level=moderate
        language: system
        files: package.*\.json$
        pass_filenames: false

  # ===================================================================
  # CUSTOM SECURITY HOOKS
  # ===================================================================
  - repo: local
    hooks:
      # Check for TODO/FIXME comments in production code
      - id: check-todos
        name: Check for TODO/FIXME comments
        entry: bash -c 'if grep -rn "TODO\|FIXME\|XXX\|HACK" src/ --exclude-dir=node_modules; then echo "Remove TODO/FIXME comments before committing"; exit 1; fi'
        language: system
        pass_filenames: false

      # Validate environment variables
      - id: validate-env-example
        name: Validate .env.example completeness
        entry: bash -c 'if [ -f .env.example ]; then echo "✓ .env.example exists"; else echo "✗ .env.example missing"; exit 1; fi'
        language: system
        pass_filenames: false

      # Check for hardcoded secrets patterns
      - id: check-hardcoded-secrets
        name: Check for hardcoded secrets
        entry: bash -c 'if grep -rE "(password|secret|key|token)\s*=\s*[\"'\''][^\"'\'']*[\"'\'']" src/ --exclude-dir=node_modules; then echo "Potential hardcoded secrets found"; exit 1; fi'
        language: system
        pass_filenames: false

      # Validate serverless.yml security
      - id: validate-serverless-security
        name: Validate serverless.yml security settings
        entry: bash -c 'if [ -f serverless.yml ]; then if ! grep -q "tracing:" serverless.yml; then echo "X-Ray tracing not configured"; exit 1; fi; fi'
        language: system
        pass_filenames: false

  # ===================================================================
  # COMMIT MESSAGE VALIDATION
  # ===================================================================
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [feat, fix, docs, style, refactor, perf, test, build, ci, chore]

# ===================================================================
# CONFIGURATION
# ===================================================================
default_language_version:
  node: "18.17.0"
  python: python3.11

# Skip hooks for specific files/patterns
exclude: |
  (?x)^(
    \.git/.*|
    node_modules/.*|
    coverage/.*|
    \.serverless/.*|
    dist/.*|
    build/.*|
    \.aws-sam/.*|
    \.terraform/.*|
    package-lock\.json|
    yarn\.lock|
    .*\.min\.js|
    .*\.min\.css
  )$

# Fail fast - stop on first hook failure
fail_fast: false

# Minimum pre-commit version required
minimum_pre_commit_version: "3.0.0"