version: '3.8'

services:
  autonomous-backlog:
    build: .
    container_name: autonomous-backlog-manager
    environment:
      - NODE_ENV=production
      - MAX_PRS_PER_DAY=5
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    volumes:
      - .:/app
      - autonomous_cache:/app/cache
      - autonomous_reports:/app/reports
    networks:
      - autonomous-network
    restart: unless-stopped
    
    # Run every 4 hours
    # Note: This requires a cron-like scheduler service or external orchestration
    labels:
      - "com.terragon.service=autonomous-backlog"
      - "com.terragon.version=1.0.0"

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: autonomous-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - autonomous-network
    restart: unless-stopped

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: autonomous-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - autonomous-network
    restart: unless-stopped

volumes:
  autonomous_cache:
  autonomous_reports:
  prometheus_data:
  grafana_data:

networks:
  autonomous-network:
    driver: bridge