name: Auto Rebase PRs

on:
  pull_request_target:
    types: [opened, reopened, synchronize]
  schedule:
    # Run daily to rebase stale PRs
    - cron: '0 6 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-rebase:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'terragon/auto-') || github.event_name == 'schedule'
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380adc5a # v4.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Git configuration
        run: |
          git config --global user.name "terragon-bot[bot]"
          git config --global user.email "terragon-bot[bot]@users.noreply.github.com"
          git config --global rerere.enabled true
          git config --global rerere.autoupdate true

      - name: Restore rerere cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: .git/rr-cache
          key: rerere-cache-${{ runner.os }}-${{ hashFiles('.git/rr-cache/**') }}
          restore-keys: |
            rerere-cache-${{ runner.os }}-

      - name: Setup merge drivers
        run: |
          # Configure merge drivers for lock files and generated content
          git config merge.theirs.name "Prefer incoming changes"
          git config merge.theirs.driver "cp %B %A"
          git config merge.union.name "Line union merge"  
          git config merge.union.driver "git merge-file -p %A %O %B > %A"

      - name: Create .gitattributes for merge strategies
        run: |
          cat > .gitattributes << 'EOF'
          package-lock.json merge=theirs
          yarn.lock merge=theirs
          *.snap merge=theirs
          *.md merge=union
          CHANGELOG.md merge=union
          docs/status/*.json merge=union
          docs/status/*.md merge=union
          *.svg merge=lock
          *.png merge=lock
          *.jpg merge=lock
          *.zip merge=lock
          EOF

      - name: Rebase onto main
        run: |
          git fetch origin main
          
          # Attempt rebase with conflict resolution
          if git rebase origin/main; then
            echo "✅ Clean rebase successful"
          else
            echo "⚠️ Conflicts detected, attempting resolution..."
            
            # Check if rerere can resolve conflicts
            if git rerere status | grep -q "Resolved"; then
              echo "✅ Rerere resolved conflicts automatically"
              git add .
              git rebase --continue
            else
              echo "❌ Manual conflict resolution required"
              git rebase --abort
              echo "::error::Rebase failed - manual intervention required"
              exit 1
            fi
          fi

      - name: Push rebased branch
        if: success()
        run: |
          git push --force-with-lease origin ${{ github.head_ref }}
          echo "✅ Successfully rebased and pushed ${{ github.head_ref }}"

      - name: Save rerere cache
        if: always()
        run: |
          # Save resolved conflicts for future use
          if [ -d ".git/rr-cache" ]; then
            echo "💾 Saving rerere cache with $(ls .git/rr-cache | wc -l) entries"
          fi

      - name: Comment on PR
        if: success()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            if (context.eventName === 'pull_request_target') {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '🤖 **Auto-rebase completed successfully**\n\nThis PR has been automatically rebased onto the latest `main` branch.'
              })
            }